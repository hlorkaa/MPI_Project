package com.example.MPI_Project.interface_tests;// Generated by Selenium IDE

import com.example.MPI_Project.testHelpers.TestUtils;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class WorkmanInterfaceTest {
    private WebDriver driver;

    @Before
    public void setUp() {
        driver = TestUtils.GetDriver();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void basicInterfaceTest() {
        driver.get("http://localhost:8080/main");
        driver.manage().window().setSize(new Dimension(1530,829));
        driver.findElement(By.name("task_loginButton")).click();
        driver.findElement(By.id("email")).click();
        driver.findElement(By.id("email")).sendKeys("workman");
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("workman");
        driver.findElement(By.cssSelector("button")).click();
        driver.findElement(By.name("exitButton")).click();
        driver.findElement(By.name("task_workButton")).click();
        driver.findElement(By.cssSelector("tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1)")).click();
        driver.findElement(By.cssSelector("tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1)")).click();
        assertThat(driver.findElement(By.cssSelector("tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1)")).getText(), is("Сотрудник"));
        driver.findElement(By.cssSelector("tr:nth-child(2) p")).click();
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(2) strong")).getText(), is("Текущие задачи"));
        {
            String value = driver.findElement(By.name("exitButton")).getAttribute("value");
            assertThat(value, is("Выход"));
        }
        driver.findElement(By.cssSelector("th:nth-child(1)")).click();
        assertThat(driver.findElement(By.cssSelector("th:nth-child(1)")).getText(), is("ИД"));
        driver.findElement(By.cssSelector("th:nth-child(2)")).click();
        assertThat(driver.findElement(By.cssSelector("th:nth-child(2)")).getText(), is("Наименование"));
        driver.findElement(By.cssSelector("th:nth-child(3)")).click();
        assertThat(driver.findElement(By.cssSelector("th:nth-child(3)")).getText(), is("Статус"));
        driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask:nth-child(2)")).click();
        driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask:nth-child(2)")).click();
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask > span")).getText(), is("Отредактированная задача"));
        driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask > i")).click();
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask > i")).getText(), is("Возникли проблемы"));
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask .colTask")).getText(), is("Просмотр и редактирование"));
        driver.findElement(By.name("exitButton")).click();
        driver.findElement(By.name("task_logoutButton")).click();
        driver.findElement(By.name("exitButton")).click();
    }

    @Test
    public void editStatusTaskInterfaceTest() {
        driver.get("http://localhost:8080/main");
        driver.manage().window().setSize(new Dimension(1530,829));
        driver.findElement(By.name("task_loginButton")).click();
        driver.findElement(By.id("email")).click();
        driver.findElement(By.id("email")).sendKeys("workman");
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("workman");
        driver.findElement(By.cssSelector("button")).click();
        driver.findElement(By.name("exitButton")).click();
        driver.findElement(By.name("task_workButton")).click();
        driver.findElement(By.name("task_changeButton")).click();
        driver.findElement(By.cssSelector("tr:nth-child(1) > .colTask .colTask")).click();
        driver.findElement(By.name("task_changeButton")).click();
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) strong")).getText(), is("Редактировать задачу"));
        assertTrue(driver.findElement(By.id("taskStatus_wip")).isSelected());
        driver.findElement(By.name("task_deadline")).click();
        driver.findElement(By.name("task_description")).click();
        assertThat(driver.findElement(By.name("task_description")).getText(), is("Отредактированное описание тестовой задачи"));
        assertThat(driver.findElement(By.cssSelector("label:nth-child(2)")).getText(), is("Готово"));
        assertThat(driver.findElement(By.cssSelector("label:nth-child(4)")).getText(), is("Выполняется"));
        assertThat(driver.findElement(By.cssSelector("label:nth-child(6)")).getText(), is("Возникли проблемы"));
        driver.findElement(By.name("task_workman")).click();
        driver.findElement(By.name("task_deadline")).click();
        {
            String value = driver.findElement(By.name("task_deadline")).getAttribute("value");
            assertThat(value, is("2021-12-05"));
        }
        driver.findElement(By.name("task_name")).click();
        {
            String value = driver.findElement(By.name("task_name")).getAttribute("value");
            assertThat(value, is("Отредактированная задача"));
        }
        driver.findElement(By.name("task_workman")).click();
        {
            String value = driver.findElement(By.name("task_workman")).getAttribute("value");
            assertThat(value, is("workman"));
        }
        {
            String value = driver.findElement(By.cssSelector("p:nth-child(5) > input")).getAttribute("value");
            assertThat(value, is("ОК"));
        }
        {
            String value = driver.findElement(By.cssSelector("form:nth-child(3) input")).getAttribute("value");
            assertThat(value, is("Отмена"));
        }
        {
            WebElement element = driver.findElement(By.name("task_name"));
            Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
            assertFalse(isEditable);
        }
        driver.findElement(By.name("task_deadline")).click();
        {
            WebElement element = driver.findElement(By.name("task_deadline"));
            Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
            assertFalse(isEditable);
        }
        driver.findElement(By.name("task_description")).click();
        {
            WebElement element = driver.findElement(By.name("task_description"));
            Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
            assertFalse(isEditable);
        }
        {
            WebElement element = driver.findElement(By.name("task_workman"));
            Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
            assertFalse(isEditable);
        }
        driver.findElement(By.cssSelector("form:nth-child(3) input")).click();
        driver.findElement(By.name("exitButton")).click();
        driver.findElement(By.name("task_logoutButton")).click();
        driver.findElement(By.name("exitButton")).click();
    }
}
